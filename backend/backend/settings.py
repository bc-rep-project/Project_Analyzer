import os
import platform

"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=7#03%*&6e$r2*ckfa@rdrplxgl97(p7h041-0nhjfjvz68p1d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'analyzer',
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',
]

CORS_ORIGIN_WHITELIST = [
    'http://localhost:4200',
]


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    #  ... other static directories, if any
    os.path.join(BASE_DIR, 'static')  # Path where tsconfig.json outputs
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

#  --- Analysis Tool Configurations  ----
#  --- Java (PMD)  ---

PMD_PATH = os.environ.get('PMD_PATH', '../../Downloads/DEVELOPMENT/pmd-dist-7.4.0-bin/pmd-bin-7.4.0/lib/')
PMD_CORE_JAR = os.path.join(PMD_PATH, 'lib', 'pmd-core-7.0.0.jar')
PMD_JAVA_JAR = os.path.join(PMD_PATH, 'lib', 'pmd-java-7.0.0.jar')
PMD_JAXEN_JAR = os.path.join(PMD_PATH, 'lib', 'pmd-jaxen-2.0.0.jar')

CUSTOM_RULES_JAR = 'backend/analyzer/analysis_utils/MyPMDCallRules.jar'
CUSTOM_RULES_DIR = os.path.join(BASE_DIR, 'analyzer', 'analysis_utils', 'pmd_custom')

TYPESCRIPT_ANALYZER_PATH = os.path.join(BASE_DIR, 'analyzer', 'analysis_utils', 'analyze_typescript.js')

# === Output Directory for JSON Results ===
ANALYSIS_OUTPUT_DIR = os.path.join(BASE_DIR, 'analyzer', 'static', 'json')

# === C++ === 
CLANG_BIN_PATH = os.environ.get('CLANG_BIN_PATH', 'clang++')  # Allow overriding
CPP_ANALYZER_PATH = os.path.join(BASE_DIR, 'analyzer', 'analysis_utils', 'analyze_cpp')

if platform.system() == 'Windows':
    CPP_ANALYZER_PATH += '.exe'

#======//
REST_FRAMEWORK = {
'DEFAULT_AUTHENTICATION_CLASSES': ( 
    'rest_framework_simplejwt.authentication.JWTAuthentication',
    'rest_framework.authentication.TokenAuthentication',
),
}

#======AUTH
AUTH_USER_MODEL =  'analyzer.CustomUser'

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}